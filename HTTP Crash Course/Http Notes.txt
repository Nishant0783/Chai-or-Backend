/****This file has notes about HTTP taught by Hitesh Sir with some more information which I found on exploring.****/


1) HTTP: HTTP stands for "Hyper Text Transfer Protocol". 
----> Q1) If presently we are working on HTTPS then why are we studying HTTP?
----> Ans1) The reason is HTTP and HTTPS are same on basic level. HTTPS stands for "Hyper text Transfer Protocol Secure". So we can see that the differnece is of "Secure", HTTPS provides an extra layer of security during data transmission on network, specially Internet. It encrypts the data exchanged between user's web browser and a website. So, learnig about HTTP can also make to learn about HTTPS.

2) HTTP headers: HTTP headers are the additional pieces of information sent by a web server along with the requested web page. Generally, the additional information is called as "metadata". Metadata is in the form of "key-value" pair.
==> There is no generalised category of headers, but some books use this way of categorization: 
    i) Request Headers: It includes all the metadata about the data coming from client. Some of this are:-
    ---> HOST: Specifies domain name being requested.
    ---> USER_AGENT: Identifies the user's browser and operating system.
    ---> ACCEPT: Informs the server about the types of content can handle.

    ii) Response Headers: It includes all the metdata about the data sent from server. Some of this are:-
    ---> SERVER: Indicates the software and versions used by web server.
    ---> CONTENT_TYPE: Specifies type of data being sent such as HTML, JSON, or images.
    ---> DATE: Represents the date and time when the response was generated.

    iii) Representation Headers: It contains the information about the resource representation included in the HTTP message. Resource representation means it encoding/compression. Encoding tells the type of URL encoding is used and compression is used to get the data in zip formats, we use compression specially for mobile apps where we need to show or recieve a large data but we compress it to make it easily travell in network.
    ---> CONTENT_TYPE: Describes the media type or MIME type of the representation. For eg: Text/HTML or application/json.
    ---> CONTENT_ENCODING: Specifies the encoding algorithms applied to the representation to allow for more efficient transmission.
    ---> LAST_MODIFIED: Provides the date and time when the representation was last modified.

    iv) Security Headers: They are the headers designed to enhance the security of web applications by providing additional layers of protection against various types of attacks.
    ---> Strict-Transport-Security(HSTS): Instructs the browser to always connect to the website via HTTPS, preventing any potential downgrade attacks.
    ---> Content-Security-Policy(CSP): Defines a set of rules taht control the types of content a browser can load for a particular web page.

    v) Payload Headers: Payload is just a fancy name for data. It just the data being send. For eg: Id, name, age, etc.
    It is not considered as a general classification.

    /***There are more types of headers and more sub headers.***/


3) Most common types of headers/metadata: 
        i) Accept: It tells what type of data can be accepted like text/html or application/json.
        ii) User-Agent: Tells the details about the device from where the request is made.
        iii) Authorization: This is most common type of header that is sent. It just contains data about the user authorization like web tokens.
        iv) Content-Type: Has data about the type of data that is being sent. Like pdf, images, docs, etc.
        v) Cookie: These are just key-value pairs which are stored in user's browser for some time to make it recognisable to server.
        vi) Cache-Control: It is used to control the data expiry time on network.

        Below are some other headers used in production:-
        vii) CORS headers: This is nothing but some privacy-policies of company. It has information like which origin is allowed or not(Access-Control-Allow-Origin), what credentials company allows(Access-Control-Allow-Credentials) or what methods like POST, GET are allowed by company(Access-Control-Allow-Methods).
        viii) Security Headers: This is just some security policies of comapny. For eg: Cross-Origin-Enbedder-Policy, Cross-Origin-Opener-Policy, Cross-Security-Policy, X-XSS-Protection.


4) HTTP Methods: These are the methods which specifies the action to be performed on a resource.
The methods are: 
---> i) GET: Use to retrieve information from server.
---> ii) POST: Used to submit data to be processed to a specified resource.
---> iii) PUT: Used to update whole resource or create a ew resource if it doesn't exist.
---> iv) DELETE: Deletes the specific resource.
---> v) HEAD: It has no message body, includes response headers only.
---> vi) OPTION: Used to check what options are available.
---> Viii) TRACE: Used to perform a message loop-back test along the path to the target resource.

/*** There are many more header methods but they are very common.***/



5) HTTP Status Codes: They are 3 digit numbers returned by a web server in response to a client's request made to the server. They provide information about the status of the request and the corresponding action that should be taken by the client or the server.
The codes are grouped into different classes, each indcating a different category: 
---> i) 1xx: Informational => Indicate that the server has recieved the request and is continuing to process it.
---> ii) 2xx: Success => Indicates taht the request was successfull and server has processed it successfully.
---> iii) 3xx: Redirection => Indicate that further action is needed to complete the request often in form of redirecting the client to another resource or URL.
---> iv) 4xx: Client Error => Indicates that the error is on client's side and server cannot fulfill the request.
---> v) 5xx: Server Error => Indicates that the error is on server's side and server cannot fulfill the request.